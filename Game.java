import java.util.*;
/**
 * This is the game class for the Lucky Vending Machine.It Allows a user 
 * to set up a new player, guess a prize, view prizes won, and read 
 * game instructions.
 * 
 * Uses the Player and LuckyGuessGenerator classes.
 * 
 * @author Prashanth Kumar Reddy Lenkala 
 * @version (3.7 07/09/2017)
 */
public class Game
{
    private Player player;
    private LuckyGuessGenerator generator;
    /**
     * Constructor for objects of class Game
     */
    public Game()
    {
        player = new Player();
        generator = new LuckyGuessGenerator();
    }  
 
    /**
     * Compares the number inputted with a random number generated by
     * the generator object. If it is the same, the player object will
     * be updated with details of the new prize they have won.
     */
    private void compareRandomNumber(int guess)
    {
        String prize = "";
        int worth = 0;
        System.out.println("\nYou have guessed: [" + guess + "]");
        generator.generateRandomNumber();
        System.out.println("The lucky number is: [" + generator.getRandomNumber() + "]");
        if (guess == generator.getRandomNumber())
        {
            switch(guess)
            {
                case 1 : prize = "Pen";
                         worth = 10;
                         break;
                         
                case 2 : prize = "Book";
                         worth = 20;
                         break;
                
                case 3 : prize = "DVD";
                         worth = 30;
                         break;
                         
                case 4 : prize = "Mouse";
                         worth = 40;
                         break;
                         
                case 5 : prize = "Keyboard";
                         worth = 50;
                         break;
            }
            System.out.println("You Won " + prize + " worth " + worth + ".\n");
            player.addPrize(prize); // adds a new prize to the list of the prizes the player has won
            player.addWorth(worth); // adds the prize's worth to the net worth of the prizes won.
        }
        else
        {
            System.out.println("\nSorry!Unfortunately you didn't win anything. Please try Again!!\n");
        }
        player.addSpent(guess);
    }
    
    /**
     * This method displays the game menu for the Lucky Vending
     * Machine game.
     */
    private void gameMenu()
    {
        System.out.println("Welcome to the Lucky Vending Machine");
        System.out.println("\nPlease Select from the Following Options:");
        System.out.println("===========================================");
        System.out.println("(1) Set up a New Player");
        System.out.println("(2) Guess a Prize");
        System.out.println("(3) What Have I Won so Far?");
        System.out.println("(4) Display Game Help");
        System.out.println("(5) Exit Game");
        System.out.println("\nChoose an Option ");
    }
    
    /**
     * Display the in-game help menu. Includes a table of all the 
     * prizes.
     */
    private void gameHelp()
    {
        System.out.println("                     [Game Help]         ");
        System.out.println("The objective of Lucky Vending Machine is for the player to");
        System.out.println("guess a number between 1 and 5. Each number corresponds to a");
        System.out.println("prize and a cost. This is shown in the table below. If the");
        System.out.println("player guesses the correct number generated by the machine,");
        System.out.println("they win the prize.");        
        System.out.println("NumberGenerated      Prize       Prize Worth   Cost to Player ");
        System.out.println("==============================================================");
        System.out.println("    1                Pen            $10             $1        ");
        System.out.println("    2                Book           $20             $2        ");
        System.out.println("    3                DVD            $30             $3        ");
        System.out.println("    4                Mouse          $40             $4        ");
        System.out.println("    5                Keyboard       $50             $5        ");
        System.out.println("==============================================================");        
        System.out.println("To begin, set up a new player with [Option 1] and then guess a prize with [Option 2]");   
    }
     
    /**
     * Prints out a table of all the prizes available and its 
     * corresponding worth and cost.
     */
    private void prizeTable()
    {
        System.out.println("NumberGenerated      Prize       Prize Worth   Cost to Player ");
        System.out.println("==============================================================");
        System.out.println("    1                Pen            $10             $1        ");
        System.out.println("    2                Book           $20             $2        ");
        System.out.println("    3                DVD            $30             $3        ");
        System.out.println("    4                Mouse          $40             $4        ");
        System.out.println("    5                Keyboard       $50             $5        ");
        System.out.println("==============================================================");
    }
    
     /**
     * This method allows the user to create a new player using the 
     * Player class. This new player will overwrite any existing 
     * players.
     */
    private void newPlayer()
    {
        player = new Player();
        Scanner sc = new Scanner(System.in);
        System.out.println("");
        while (player.getName().length() == 0)
        {
            System.out.println("Please enter your name:");
            String newName = sc.nextLine();
            if (newName.trim().length() > 0) // checks wether the player has entered the name or not.
                player.setName(newName.trim());
            else
                System.out.print("You have not entered anything. ");
        }
        System.out.println("\nPLAYER CREATED...! Now select option (2) to guess a number\n\n");
    }
       
    /**
     * This method allows the user to press the [ENTER] key to
     * continue.
     */
    private void pressEnter()
    {
        Scanner sc = new Scanner(System.in);
        System.out.println("\nPress ENTER to continue         ");
        sc.nextLine();
    }
    
    /**
     * This method Stops the Lucky Vending Machine game.
     */
    private void exitGame()
    {
        player = new Player();
        System.out.println("------------ [Exit Game] -----------");
        System.out.println("Thank you for playing the Game. The game will now exit.");
    }
    
    /**
     * This method prompts the user for a guess, checks that it is 
     * valid, and then compares it to the number generated by the 
     * generator object. If it is the same, the player wins.
     */
    private void guessPrize()
    {
        if (player.getName().length() > 0)
            {
                Scanner sc = new Scanner(System.in);
                prizeTable();
                System.out.println("Please guess a number between 1 and 5:");
                int guess = sc.nextInt();
                if (guess > 5 || guess < 1) // checks wether the player's input lies in between 1 and 5.
            
                    System.out.println("Error! Your guess must be between 1 and 5.");
              
                else
            
                    compareRandomNumber(guess);
            }
        else
            {
                System.out.println("Player hasn't been set up.");      
                newPlayer();
            }        
    }
   
    /**
     * This method starts the Lucky Vending Machine game. 
     */
    public void startGame()
    {
        String input = "";        
        Scanner sc = new Scanner(System.in);
        
        while (!input.equals("5"))
        {
            gameMenu();
            input = sc.nextLine();
            switch (input)
            {
                case "1":     newPlayer();
                              break; 
                              
                case "2":     guessPrize();
                              pressEnter();
                              break;                        
                                                                                      
                case "3":     if (player.getName().length() > 0)
                              {
                                  player.playerStats(); 
                                  pressEnter();
                                  break;
                              }
                              else
                              {
                                  System.out.println("Player hasn't been set up."); 
                                  newPlayer();
                                  break;
                              }                                            
                
                case "4":     gameHelp(); 
                              pressEnter();
                              break;
                              
                case "5":     exitGame(); 
                              break;
                default:      System.out.println("Invalid Option.\n"); 
                              break;
            }
        }
    }
    
}
